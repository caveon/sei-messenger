(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("SeiMessenger", [], factory);
	else if(typeof exports === 'object')
		exports["SeiMessenger"] = factory();
	else
		root["SeiMessenger"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Sends a message to Caveon Secure Exam Interface
 * @param {string} [origin = https://scorpion.caveon.com] - origin of the message destination
 * @param {string} [responseId = query parameter: 'response_id'] - response id passed from SEI
 * @return {null} null
 */

var SeiMessenger = function SeiMessenger(origin, responseId) {
  var _this = this;

  _classCallCheck(this, SeiMessenger);

  this.pong = function (evt) {
    if (evt.data === 'pong') {
      _this.seiWindow = evt.source;
    }
  };

  this.getSeiResponseId = function () {
    var query = window.location.search.substring(1);
    var params = query.split('&');
    for (var i = 0, numParams = params.length; i < numParams; i++) {
      var param = params[i].split('=');
      if (param[0] === _this.seiQueryParamName) {
        return param[1];
      }
    }
    return 'no query param found';
  };

  this.pingTargetWindow = function (thisWindow) {
    thisWindow.parent.postMessage({ seiPing: true }, _this.seiOrigin);
    if (_this.numPingAttempts < _this.maxPingAttempts) {
      _this.numPingAttempts++;
      _this.pingTargetWindow(thisWindow.parent);
    }
  };

  this.sendMessage = function () {
    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    _this.seiWindow.postMessage({ message: message, response_id: _this.responseId, meta: meta }, _this.seiOrigin);
  };

  this.seiOrigin = origin || 'https://scorpion.caveon.com';
  this.seiQueryParamName = 'response_id';
  this.maxPingAttempts = 10;
  this.numPingAttempts = 0;
  this.seiWindow = window.parent;
  this.responseId = responseId || this.getSeiResponseId();

  window.addEventListener('message', this.pong);

  this.pingTargetWindow(window);
}

/**
 * hears and stores the sei take window target
 * @param {object} evt - 'message' browser event
 * @return {null} null
 */


/**
 * Grabs the response_id query parameter
 * @return {string} response_id query parameter
 */


/**
 * Sends a message to the parent window recurseively so as to reach n nested windows
 * @param {object} thisWindow - current window object
 * @return {null} null
 */

/**
 * Sends the message to SEI with other necessary info
 * @param {string} message - message text
 * @param {object} [meta = null] - meta data to send along with message to SEI
 * @return {null} null
 */
;

module.exports = SeiMessenger;

/***/ })
/******/ ]);
});